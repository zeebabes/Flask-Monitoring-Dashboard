- name: Setup Flask Dashboard on EC2
  hosts: web
  become: yes
  tasks:
    - name: Enable Amazon Linux extras for nginx
      command: amazon-linux-extras enable nginx1

    - name: Install dependencies
      yum:
        name:
          - python3
          - python3-pip
          - nginx
        state: present

    - name: Install pip3 using yum
      command: yum install -y python3-pip

    - name: Copy app files
      copy:
        src: "{{ item }}"
        dest: /home/ec2-user/
      with_items:
        - ../app.py
        - ../requirements.txt
        - ../gunicorn_config.py

    - name: Copy static files
      copy:
        src: ../static/
        dest: /home/ec2-user/static/
        mode: preserve

    - name: Install Python packages from requirements.txt
      pip:
        requirements: /home/ec2-user/requirements.txt
        executable: /usr/local/bin/pip3

    - name: Create Gunicorn systemd service
      copy:
        dest: /etc/systemd/system/gunicorn.service
        content: |
          [Unit]
          Description=Gunicorn daemon for Flask App
          After=network.target

          [Service]
          User=ec2-user
          WorkingDirectory=/home/ec2-user
          ExecStart=/usr/local/bin/gunicorn -c gunicorn_config.py app:app

          [Install]
          WantedBy=multi-user.target

    - name: Start and enable Gunicorn
      systemd:
        name: gunicorn
        enabled: yes
        state: started

    - name: Configure Nginx with SSL placeholder
      copy:
        dest: /etc/nginx/conf.d/flaskapp.conf
        content: |
          server {
              listen 80;
              server_name zeetech.click;

              location / {
                  proxy_pass http://localhost:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }

              location /static/ {
                  alias /home/ec2-user/static/;
              }
          }

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Check if certbot is already installed
      command: which certbot
      register: certbot_check
      ignore_errors: yes

    - name: Install Certbot only if not present
      pip:
        name: certbot
        executable: pip3
      when: certbot_check.rc != 0

    - name: Enable HTTPS and redirect HTTP to HTTPS with Certbot
      command: >
        certbot --nginx -d zeetech.click --agree-tos
        -m kzagbabiaka@gmail.com --redirect --non-interactive
      register: certbot_result
      changed_when: "'Congratulations' in certbot_result.stdout or 'Certificate not yet due for renewal' in certbot_result.stdout"
